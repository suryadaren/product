# Use Node.js Alpine image for the base image
FROM node:alpine as base

# Set the working directory for all build stages
WORKDIR /usr/src/app

# Install Prisma globally
RUN npm install -g prisma

# Create a stage for installing production dependencies
FROM base as deps

# Leverage caching to speed up dependency installation
COPY package*.json ./
RUN npm ci --production

# Create a stage for building the application
FROM deps as build

# Copy the rest of the source files into the image
COPY . .

# Run the Prisma generate command
RUN prisma generate

# Run the build script
RUN npm run build

# Create a new stage to run the application with minimal runtime dependencies
FROM base as final

# Set the production node environment by default
ENV NODE_ENV production

# Run the application as a non-root user
USER node

# Copy package.json so that package manager commands can be used
COPY package*.json ./

# Copy the production dependencies from the deps stage and
# also the built application from the build stage into the image
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist

# Expose the port that the application listens on
EXPOSE 3000

# Run the application
CMD ["npm", "run", "start:prod"]
